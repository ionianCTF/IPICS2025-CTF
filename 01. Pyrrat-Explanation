This TryHackMe "Pyrat" challenge is a great learning opportunity for beginners to understand the foundational stages of penetration testing. The first step involves reconnaissance using Nmap, a tool that reveals important information such as open ports and running services. In this case, two ports were identified: an SSH service and a Python-based web server. While automated tools like directory fuzzers initially failed to find useful information, manually interacting with the server using Netcat revealed a critical vulnerability — the server was executing raw Python code received over TCP. This scenario teaches students the importance of manual testing and creative thinking when automation doesn't yield results.

The next learning focus is on exploitation and post-exploitation. The ability to execute Python code remotely was leveraged to send a reverse shell payload, allowing the attacker to remotely control the system. Once inside, the attacker enumerated the file system and discovered a hidden .git directory containing plaintext credentials. This demonstrates the real-world risk of poor development practices, such as storing secrets in version-controlled repositories. Learners understand the significance of file system inspection, and how leaked credentials can be used to escalate access — in this case, through SSH login.

Finally, the challenge emphasizes privilege escalation, a crucial phase in any attack. By recovering a deleted Python file (likely through enumeration or forensics techniques), the attacker gains root-level access and retrieves the final flag. This part of the walkthrough shows how persistence, creativity, and technical knowledge can uncover hidden paths to system compromise. It also teaches defenders to securely manage sensitive files, apply least-privilege principles, and monitor for unexpected behaviors. Overall, the challenge is an end-to-end lesson in ethical hacking, from initial scanning to full system compromise.
